/*
 * This file is generated by jOOQ.
*/
package io.pivotal.spring.cloud.services.resourcelock.db.generated.tables.records;


import io.pivotal.spring.cloud.services.resourcelock.db.generated.tables.EnvironmentMetaSchema;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This table has a single row describing the schema that decribes an environments 
 * metadata
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnvironmentMetaSchemaRecord extends UpdatableRecordImpl<EnvironmentMetaSchemaRecord> implements Record2<Object, Integer> {

    private static final long serialVersionUID = 1165895128;

    /**
     * Setter for <code>public.environment_meta_schema.schema</code>.
     */

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public EnvironmentMetaSchemaRecord setSchema(Object value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.environment_meta_schema.schema</code>.
     */

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public Object getSchema() {
        return (Object) get(0);
    }

    /**
     * Setter for <code>public.environment_meta_schema.id</code>.
     */
    public EnvironmentMetaSchemaRecord setId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.environment_meta_schema.id</code>.
     */
    public Integer getId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Object, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Object, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field1() {
        return EnvironmentMetaSchema.ENVIRONMENT_META_SCHEMA.SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return EnvironmentMetaSchema.ENVIRONMENT_META_SCHEMA.ID;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    @Override
    public Object component1() {
        return getSchema();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getId();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    @Override
    public Object value1() {
        return getSchema();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getId();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    @Override
    public EnvironmentMetaSchemaRecord value1(Object value) {
        setSchema(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnvironmentMetaSchemaRecord value2(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnvironmentMetaSchemaRecord values(Object value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EnvironmentMetaSchemaRecord
     */
    public EnvironmentMetaSchemaRecord() {
        super(EnvironmentMetaSchema.ENVIRONMENT_META_SCHEMA);
    }

    /**
     * Create a detached, initialised EnvironmentMetaSchemaRecord
     */
    public EnvironmentMetaSchemaRecord(Object schema, Integer id) {
        super(EnvironmentMetaSchema.ENVIRONMENT_META_SCHEMA);

        set(0, schema);
        set(1, id);
    }
}
