/*
 * This file is generated by jOOQ.
*/
package io.pivotal.spring.cloud.services.resourcelock.db.generated.tables;


import io.pivotal.spring.cloud.services.resourcelock.db.generated.Indexes;
import io.pivotal.spring.cloud.services.resourcelock.db.generated.Keys;
import io.pivotal.spring.cloud.services.resourcelock.db.generated.Public;
import io.pivotal.spring.cloud.services.resourcelock.db.generated.tables.records.EnvironmentMetaSchemaRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This table has a single row describing the schema that decribes an environments 
 * metadata
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnvironmentMetaSchema extends TableImpl<EnvironmentMetaSchemaRecord> {

    private static final long serialVersionUID = -2142469298;

    /**
     * The reference instance of <code>public.environment_meta_schema</code>
     */
    public static final EnvironmentMetaSchema ENVIRONMENT_META_SCHEMA = new EnvironmentMetaSchema();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EnvironmentMetaSchemaRecord> getRecordType() {
        return EnvironmentMetaSchemaRecord.class;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<EnvironmentMetaSchemaRecord, Object> SCHEMA = createField("schema", org.jooq.impl.SQLDataType.OTHER.nullable(false), this, "");

    /**
     * The column <code>public.environment_meta_schema.id</code>.
     */
    public final TableField<EnvironmentMetaSchemaRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>public.environment_meta_schema</code> table reference
     */
    public EnvironmentMetaSchema() {
        this(DSL.name("environment_meta_schema"), null);
    }

    /**
     * Create an aliased <code>public.environment_meta_schema</code> table reference
     */
    public EnvironmentMetaSchema(String alias) {
        this(DSL.name(alias), ENVIRONMENT_META_SCHEMA);
    }

    /**
     * Create an aliased <code>public.environment_meta_schema</code> table reference
     */
    public EnvironmentMetaSchema(Name alias) {
        this(alias, ENVIRONMENT_META_SCHEMA);
    }

    private EnvironmentMetaSchema(Name alias, Table<EnvironmentMetaSchemaRecord> aliased) {
        this(alias, aliased, null);
    }

    private EnvironmentMetaSchema(Name alias, Table<EnvironmentMetaSchemaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "This table has a single row describing the schema that decribes an environments metadata");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ENVIRONMENT_META_SCHEMA_ID_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EnvironmentMetaSchemaRecord> getPrimaryKey() {
        return Keys.ENVIRONMENT_META_SCHEMA_ID_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EnvironmentMetaSchemaRecord>> getKeys() {
        return Arrays.<UniqueKey<EnvironmentMetaSchemaRecord>>asList(Keys.ENVIRONMENT_META_SCHEMA_ID_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnvironmentMetaSchema as(String alias) {
        return new EnvironmentMetaSchema(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnvironmentMetaSchema as(Name alias) {
        return new EnvironmentMetaSchema(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EnvironmentMetaSchema rename(String name) {
        return new EnvironmentMetaSchema(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EnvironmentMetaSchema rename(Name name) {
        return new EnvironmentMetaSchema(name, null);
    }
}
